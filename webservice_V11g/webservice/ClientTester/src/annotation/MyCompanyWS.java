
package annotation;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * Oracle JAX-WS 2.1.5
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "MyCompanyWS", targetNamespace = "http://annotation/", wsdlLocation = "http://localhost:7101/WebService-Annotation-context-root/MyCompanyPort?WSDL#%7Bhttp%3A%2F%2Fannotation%2F%7DMyCompanyWS")
public class MyCompanyWS
    extends Service
{

    private final static URL MYCOMPANYWS_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(annotation.MyCompanyWS.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = annotation.MyCompanyWS.class.getResource(".");
            url = new URL(baseUrl, "http://localhost:7101/WebService-Annotation-context-root/MyCompanyPort?WSDL#%7Bhttp%3A%2F%2Fannotation%2F%7DMyCompanyWS");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://localhost:7101/WebService-Annotation-context-root/MyCompanyPort?WSDL#%7Bhttp%3A%2F%2Fannotation%2F%7DMyCompanyWS', retrying as a local file");
            logger.warning(e.getMessage());
        }
        MYCOMPANYWS_WSDL_LOCATION = url;
    }

    public MyCompanyWS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MyCompanyWS() {
        super(MYCOMPANYWS_WSDL_LOCATION, new QName("http://annotation/", "MyCompanyWS"));
    }

    /**
     * 
     * @return
     *     returns MyCompany
     */
    @WebEndpoint(name = "MyCompanyPort")
    public MyCompany getMyCompanyPort() {
        return super.getPort(new QName("http://annotation/", "MyCompanyPort"), MyCompany.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MyCompany
     */
    @WebEndpoint(name = "MyCompanyPort")
    public MyCompany getMyCompanyPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://annotation/", "MyCompanyPort"), MyCompany.class, features);
    }

}
